{"version":3,"sources":["components/Navbar.js","components/XMLReader.js","components/ReadXML.js","App.js","index.js"],"names":["Navbar","className","XMLReader","useState","highlighted","setHighlighted","conceptos","setConceptos","nameFile","setNameFile","processRow","i","row","finalVal","convertDescription","Descripcion","replace","BienesTransp","Cantidad","ClaveUnidad","Unidad","CveMaterialPeligroso","Embalaje","DescripEmbalaje","PesoEnKg","ValorMercancia","Moneda","FraccionArancelaria","UUIDComercioExt","Pedimentos","generateFile","a","csvFile","length","time","Date","getTime","blob","Blob","type","nameFileSaved","console","log","split","navigator","msSaveBlob","undefined","link","document","createElement","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","useEffect","key","defaultValue","saved","localStorage","getItem","JSON","parse","getStorageValue","color","padding","backgroundColor","borderColor","borderStyle","borderWidth","fontSize","textAlign","fontWeight","onDragEnter","onDragLeave","onDragOver","e","preventDefault","onDrop","Array","from","dataTransfer","files","filter","file","forEach","text","xmlContent","parser","DOMParser","parseFromString","activeElement","children","childNodes","elNode","nodeName","nodoActual","attributes","nodeValue","onClick","htmlFor","id","placeholder","onInput","value","target","setItem","stringify","disabled","map","concepto","listStyleType","ReadXML","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f981a377.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <div className=\"navbar-brand\" >\n          XML Reader\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const XMLReader = () => {\n  const mystyle1 = {\n    color: \"#fff\",\n    padding: \"50px\",\n    backgroundColor: \"rgba(255,255,255,0.4)\",\n    borderColor: \"rgba(255,255,255,0.9)\",\n    borderStyle: \"dashed\",\n    borderWidth: \"thick\",\n    fontSize: \"3.5rem\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  };\n  const mystyle2 = {\n    color: \"#000\",\n    padding: \"50px\",\n    backgroundColor: \"rgba(255,255,255,0.2)\",\n    borderColor: \"rgba(24,24,24,0.3)\",\n    borderStyle: \"dashed\",\n    borderWidth: \"thick\",\n    fontSize: \"3.5rem\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  };\n\n  const [highlighted, setHighlighted] = useState(false);\n  const [conceptos, setConceptos] = useState([]);\n  const [nameFile, setNameFile] = useState('FileGenerated.ini');\n\n  const processRow = (i, row) => {\n    let finalVal = \"\";\n\n    let convertDescription = row.Descripcion.replace(/(\\n)/g, \" \");\n\n    finalVal += `[${i}]`;\n    finalVal += \"\\n\";\n    finalVal += `BienesTransp=${row.BienesTransp}`;\n    finalVal += \"\\n\";\n    finalVal += `Descripcion=${convertDescription}`;\n    finalVal += \"\\n\";\n    finalVal += `Cantidad=${row.Cantidad}`;\n    finalVal += \"\\n\";\n    finalVal += `ClaveUnidad=${row.ClaveUnidad}`;\n    finalVal += \"\\n\";\n    finalVal += `Unidad=${row.Unidad}`;\n    finalVal += \"\\n\";\n    finalVal += `CveMaterialPeligroso=${row.CveMaterialPeligroso}`;\n    finalVal += \"\\n\";\n    finalVal += `Embalaje=${row.Embalaje}`;\n    finalVal += \"\\n\";\n    finalVal += `DescripEmbalaje=${row.DescripEmbalaje}`;\n    finalVal += \"\\n\";\n    finalVal += `PesoEnKg=${row.PesoEnKg}`;\n    finalVal += \"\\n\";\n    finalVal += `ValorMercancia=${row.ValorMercancia}`;\n    finalVal += \"\\n\";\n    finalVal += `Moneda=${row.Moneda}`;\n    finalVal += \"\\n\";\n    finalVal += `FraccionArancelaria=${row.FraccionArancelaria}`;\n    finalVal += \"\\n\";\n    finalVal += `UUIDComercioExt=${row.UUIDComercioExt}`;\n    finalVal += \"\\n\";\n    finalVal += `Pedimentos=${row.Pedimentos}`;\n\n    return finalVal + \"\\n\";\n  };\n\n  const generateFile = async () => {\n    \n    let csvFile = \"\";\n    for (let i = 0; i < conceptos.length; i++) {\n      csvFile += processRow(i, conceptos[i]);\n    }\n\n    let time = new Date().getTime();\n    let blob = new Blob([csvFile], { type: \"text/plain;charset=utf-8;\" });\n\n    let nameFileSaved = nameFile;\n    console.log(nameFileSaved.split('.')[0])\n\n    if (navigator.msSaveBlob) {\n      // IE 10+\n      navigator.msSaveBlob(blob, `${nameFile.split('.')[0]}_${time}.${nameFile.split('.')[1]}`);\n      setConceptos([]);\n    } else {\n      let link = document.createElement(\"a\");\n      if (link.download !== undefined) {\n        // feature detection\n        // Browsers that support HTML5 download attribute\n        let url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", `${nameFile.split('.')[0]}_${time}.${nameFile.split('.')[1]}`);\n        link.style.visibility = \"hidden\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        setConceptos([]);\n\n        setHighlighted(false);\n      }\n    }\n  };\n\n  const getStorageValue = (key, defaultValue) => {\n    // getting stored value\n    const saved = localStorage.getItem(key);\n    const initial = JSON.parse(saved);\n    return initial || defaultValue;\n  }\n\n  useEffect(() => {\n    setNameFile(getStorageValue('nameFile', nameFile));\n  }, [nameFile]);\n\n  \n  return (\n    <>\n      <div className=\"card text-white bg-secondary mb-3\">\n        <div className=\"card-header\">√Årea de Archivos</div>\n        <div className=\"card-body\">\n          <div\n            style={highlighted ? mystyle1 : mystyle2}\n            onDragEnter={() => {\n              setHighlighted(true);\n            }}\n            onDragLeave={() => {\n              setHighlighted(false);\n            }}\n            onDragOver={(e) => {\n              e.preventDefault();\n            }}\n            onDrop={(e) => {\n              e.preventDefault();\n\n              Array.from(e.dataTransfer.files)\n                .filter((file) => file.type === \"text/xml\")\n                .forEach(async (file) => {\n                  const text = await file.text();\n                  let xmlContent = text;\n                  let parser = new DOMParser();\n                  let xmlDOM = parser.parseFromString(\n                    xmlContent,\n                    \"application/xml\"\n                  );\n\n                  xmlDOM.activeElement.children[2].childNodes.forEach(\n                    (elNode) => {\n                      if (elNode.nodeName === \"cfdi:Concepto\") {\n                        let nodoActual = {\n                          BienesTransp:\n                            elNode.attributes[\"ClaveProdServ\"].nodeValue,\n                          Descripcion:\n                            elNode.attributes[\"Descripcion\"].nodeValue,\n                          Cantidad: elNode.attributes[\"Cantidad\"].nodeValue,\n                          ClaveUnidad:\n                            elNode.attributes[\"ClaveUnidad\"].nodeValue,\n                          Unidad: elNode.attributes[\"Unidad\"].nodeValue,\n                          CveMaterialPeligroso: \"\",\n                          Embalaje: \"\",\n                          DescripEmbalaje: \"\",\n                          PesoEnKg: \"\",\n                          ValorMercancia: \"\",\n                          Moneda: \"\",\n                          FraccionArancelaria: \"\",\n                          UUIDComercioExt: \"\",\n                          Pedimentos: \"\",\n                        };\n                        // console.log(nodoActual)\n                        setConceptos((conceptos) => [...conceptos, nodoActual]);\n                      }\n                    }\n                  );\n                });\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              // document.getElementById(\"imgupload\").click();\n            }}\n          >\n            Coloca aqu√≠ tu archivo\n          </div>\n        </div>\n      </div>\n\n      <div className=\"w100\">\n        <label htmlFor=\"nameFile\">Nombre para archivo generado</label>\n        <input \n          type=\"text\" \n          id=\"nameFile\" \n          className=\"form-control mb-3\"\n          placeholder={'Default: ' + nameFile.split('.')[0]} \n          onInput={ e => {\n            let value = e.target.value;\n            value = value.replace(/ /g, \"_\");\n            setNameFile(`${value}.ini`);\n            localStorage.setItem(\"nameFile\", JSON.stringify(`${value}.ini`));\n          } }\n        />\n        <div className=\"d-grid gap-2\">\n          <button \n            className=\"btn btn-info btn\" \n            onClick={() => generateFile()}\n            disabled={ !conceptos.length > 0 ? true : false}\n          >\n            Generar Archivo\n          </button>\n        </div>\n      </div>\n\n      {conceptos.length > 0 && (\n        <div className=\"card text-white bg-primary mb-3 mt-3\">\n          <div className=\"card-header\">Vista previa</div>\n          <div className=\"card-body\">\n            <div className=\"card-text bg-light text-secondary\">\n              <ul>\n                {conceptos.map((concepto, i) => (\n                  <li style={{ listStyleType: \"none\" }} key={i}>\n                    [{i}]\n                    <br />\n                    BienesTransp={concepto.BienesTransp}\n                    <br />\n                    Descripcion={concepto.Descripcion}\n                    <br />\n                    Cantidad={concepto.Cantidad}\n                    <br />\n                    ClaveUnidad={concepto.ClaveUnidad}\n                    <br />\n                    Unidad={concepto.Unidad}\n                    <br />\n                    CveMaterialPeligroso={concepto.CveMaterialPeligroso}\n                    <br />\n                    Embalaje={concepto.Embalaje}\n                    <br />\n                    DescripEmbalaje={concepto.DescripEmbalaje}\n                    <br />\n                    PesoEnKg={concepto.PesoEnKg}\n                    <br />\n                    ValorMercancia={concepto.ValorMercancia}\n                    <br />\n                    Moneda={concepto.Moneda}\n                    <br />\n                    FraccionArancelaria={concepto.FraccionArancelaria}\n                    <br />\n                    UUIDComercioExt={concepto.UUIDComercioExt}\n                    <br />\n                    Pedimentos={concepto.Pedimentos}\n                    <br />\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Navbar } from \"./Navbar\";\nimport { XMLReader } from \"./XMLReader\";\n\nexport const ReadXML = () => {\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mt-4\">\n        <XMLReader />\n      </div>\n    </>\n  );\n};\n","import { ReadXML } from \"./components/ReadXML\";\n\nfunction App() {\n  return (\n    <ReadXML />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}